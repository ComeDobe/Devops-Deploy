

 # Dockerfile 

->Étape de build
FROM node:18.17.1 AS build
WORKDIR /app
-> Copiez d'abord les fichiers de dépendances pour tirer parti de la mise en cache des couches Docker
COPY package*.json ./
RUN npm install --legacy-peer-deps
-> Copiez le reste des fichiers sources du projet Angular
COPY . .
ENV NODE_OPTIONS="--max_old_space_size=4096"
-> Construisez l'application pour la production
RUN npm run build
-> Étape de serve avec Nginx
FROM nginx:stable
->Assurez-vous que le chemin /app/dist/testprojet correspond au répertoire de distribution défini dans angular.json
COPY --from=build /app/dist/testprojet /usr/share/nginx/html
-> Copiez la configuration personnalisée de Nginx si nécessaire
COPY ./nginx-custom.conf /etc/nginx/conf.d/default.conf
EXPOSE 80



 # Deploy.sh


#!/bin/bash
->Mettre à jour le code source
git pull
-> Construire l'image Docker
docker build --no-cache -t image-application .
-> Arreter le conteneur existant
docker stop conteneur-application
->Supprimer le conteneur existant
docker rm conteneur-application
-> Lancer un nouveau conteneur
docker run -d --name=conteneur-application -p 4200:80 image-application

 # nginx-custom.conf 


server {
    listen 80;
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }
}



 # vagrantfile


Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"
  config.vm.network "forwarded_port", guest: 80, host: 4200
  config.vm.provision "docker"
  config.vm.synced_folder ".", "/vagrant", type: "virtualbox"
end


 # docker-compose.yml

version: '3.3'
services:
  frontend:
    image: frontendlocmns
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - backend

networks:
  backend:
    external: true

############################################################


dans l'editeur : npm run build

ensuite sur docker 

sudo apt install git 

git clone projet

docker build -t frontend .

docker run -d -p 4200:80 frontend 



 # Acceder à l'application



http://127.0.0.1:4200/login


http://127.0.0.1:8080  pour php my admin




